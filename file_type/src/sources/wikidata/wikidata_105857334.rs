use crate::FileType;
use crate::format::{ByteSequence, FileFormat, PositionType, Regex, Signature, SourceType, Token};

pub(crate) const WIKIDATA_105857334: FileType = FileType {
    file_format: &FileFormat {
        id: 105_857_334,
        source_type: SourceType::Wikidata,
        name: "JCreator Workspace (v1.0)",
        extensions: &["jcw"],
        media_types: &["text/plain"],
        signatures: &[Signature {
            byte_sequences: &[ByteSequence {
                position_type: PositionType::BOF,
                offset: Some(0),
                regex: Regex {
                    tokens: &[Token::Literal(&[
                        0x21, 0x20, 0x2A, 0x2A, 0x20, 0x4A, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6F,
                        0x72, 0x20, 0x57, 0x6F, 0x72, 0x6B, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20,
                        0x46, 0x69, 0x6C, 0x65, 0x20, 0x28, 0x43, 0x29, 0x32, 0x30, 0x30, 0x30,
                        0x0D, 0x0A, 0x21, 0x20, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,
                        0x2A, 0x2A, 0x20, 0x44, 0x4F, 0x20, 0x4E, 0x4F, 0x54, 0x20, 0x45, 0x44,
                        0x49, 0x54, 0x20, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A,
                        0x0D, 0x0A, 0x0D, 0x0A, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4F, 0x4E, 0x20,
                        0x3A, 0x3D, 0x20, 0x22, 0x31, 0x2E, 0x30, 0x30, 0x22, 0x0D, 0x0A, 0x4C,
                        0x41, 0x42, 0x45, 0x4C, 0x20, 0x3A, 0x3D, 0x20, 0x22,
                    ])],
                },
            }],
        }],
        related_formats: &[],
    },
};
