use crate::format::{ByteSequence, FileFormat, PositionType, Regex, Signature, SourceType, Token};
use crate::FileType;

pub(crate) const WIKIDATA_105857493: FileType = FileType {
    file_format: &FileFormat {
        id: 105_857_493,
        source_type: SourceType::Wikidata,
        name: "4DO Saved state",
        extensions: &["4dosav"],
        media_types: &["application/octet-stream"],
        signatures: &[Signature {
            byte_sequences: &[ByteSequence {
                position_type: PositionType::BOF,
                offset: Some(0),
                regex: Regex {
                    tokens: &[Token::Literal(&[
                        0x01, 0x01, 0x97, 0x97, 0x40, 0x00, 0x00, 0x00, 0x03, 0x81, 0x50, 0x00,
                        0x87, 0x81, 0x50, 0x00, 0xCF, 0x1E, 0x53, 0x00, 0x2F, 0x20, 0x57, 0x00,
                        0x4F, 0x20, 0x57, 0x00, 0x5B, 0x20, 0x57, 0x00, 0xBB, 0x41, 0x57, 0x00,
                        0x71, 0x4F, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x20,
                    ])],
                },
            }],
        }],
        related_formats: &[],
    },
};
