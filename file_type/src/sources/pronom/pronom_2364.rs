use crate::format::{
    ByteSequence, FileFormat, InternalSignature, PositionType, Regex, RelatedFormat,
    RelationshipType, SourceType, Token,
};

pub(crate) const PRONOM_2364: FileFormat = FileFormat {
    id: 2_364,
    source_type: SourceType::Pronom,
    name: "NeoDisk Icon File",
    extensions: &["nic"],
    media_types: &[],
    internal_signatures: &[InternalSignature {
        byte_sequences: &[ByteSequence {
            position_type: PositionType::BOF,
            offset: Some(0),
            regex: Regex {
                tokens: &[Token::Literal(&[
                    0x2E, 0x4E, 0x49, 0x43, 0x03, 0x00, 0x3B, 0x4E, 0x65, 0x6F, 0x44, 0x65, 0x73,
                    0x6B, 0x20, 0x49, 0x63, 0x6F, 0x6E, 0x20, 0x46, 0x69, 0x6C, 0x65, 0x20, 0x66,
                    0x6F, 0x72, 0x6D, 0x61, 0x74, 0x2C, 0x20, 0x43, 0x6F, 0x70, 0x79, 0x72, 0x69,
                    0x67, 0x68, 0x74, 0x20, 0xBD, 0x20, 0x31, 0x39, 0x39, 0x30, 0x20, 0x47, 0x72,
                    0x69, 0x62, 0x6E, 0x69, 0x66, 0x20, 0x53, 0x6F, 0x66, 0x74, 0x77, 0x61, 0x72,
                    0x65,
                ])],
            },
        }],
    }],
    related_formats: &[],
};
