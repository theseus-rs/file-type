use crate::format::{ByteSequence, FileFormat, PositionType, Regex, Signature, SourceType, Token};
use crate::FileType;

pub(crate) const WIKIDATA_105849789: FileType = FileType {
    file_format: &FileFormat {
        id: 105_849_789,
        source_type: SourceType::Wikidata,
        name: "16bit DOS COM RNC / PRO-PACK compressed",
        extensions: &["com"],
        media_types: &["application/octet-stream"],
        signatures: &[Signature {
            byte_sequences: &[ByteSequence {
                position_type: PositionType::BOF,
                offset: Some(0),
                regex: Regex {
                    tokens: &[Token::Literal(&[
                        0x83, 0xEC, 0x10, 0x8B, 0xEC, 0xBE, 0xFA, 0x02, 0xFC, 0xE8, 0x41, 0x00,
                        0x05, 0x00, 0x01, 0x8B, 0xC8, 0xE8, 0x39, 0x00, 0x8B, 0xD0, 0x03, 0xC6,
                        0x05, 0x06, 0x00, 0x8B, 0xF8, 0xE8, 0x2D, 0x00, 0xAD, 0x88, 0x66, 0x0A,
                        0x32, 0xE4, 0x89, 0x76, 0x00, 0x8B, 0xF7, 0x03, 0xC1, 0x8B, 0xF8, 0x3B,
                        0xFE, 0x76, 0x0E, 0xFD, 0x57, 0x4E, 0x4F, 0x8B, 0xCA, 0xF3, 0xA4, 0x47,
                        0x89, 0x7E, 0x00, 0x5E, 0xFC, 0x8B, 0xFE, 0x56, 0xBE, 0x56, 0x01, 0xB9,
                        0xA0, 0x01, 0xF3, 0xA4, 0xC3, 0xE8, 0x02, 0x00, 0x8B, 0xD8, 0xAD, 0x86,
                        0xE0, 0xC3, 0x89, 0x7E, 0x02, 0x81, 0xC7, 0x80, 0x00, 0x89, 0x7E, 0x04,
                        0x81, 0xC7, 0x80, 0x00, 0x89, 0x7E, 0x06, 0x8B, 0x76, 0x00, 0x8B, 0x04,
                        0x89, 0x46, 0x0C, 0xBF, 0x00, 0x01, 0xC6, 0x46, 0x0B, 0x00, 0xB0, 0x02,
                        0xE8, 0xAA, 0x00, 0x8B, 0x56, 0x02, 0xE8, 0xFA, 0x00, 0x8B, 0x56, 0x04,
                        0xE8, 0xF4, 0x00, 0x8B, 0x56, 0x06, 0xE8, 0xEE, 0x00, 0xE8, 0x93, 0x00,
                        0x89, 0x46, 0x08, 0xEB, 0x1C, 0x8B, 0x56, 0x04, 0xE8, 0x57, 0x00, 0x51,
                        0x8B, 0x56, 0x06, 0xE8, 0x50, 0x00, 0x83, 0xC1, 0x02, 0x58, 0x40, 0x8B,
                        0xD6, 0x8B, 0xF7, 0x2B, 0xF0, 0xF3, 0xA4, 0x8B, 0xF2, 0x8B, 0x56, 0x02,
                        0xE8, 0x3B, 0x00, 0xE3, 0x25, 0xF3, 0xA4, 0x8A, 0x4E, 0x0B, 0x8B, 0x04,
                        0x8B, 0xD8, 0xD3, 0xC0, 0xBA, 0x01, 0x00, 0xD3, 0xE2, 0x4A, 0x21, 0x56,
                        0x0C, 0x23, 0xD0, 0x8B, 0x44, 0x02, 0xD3, 0xE3, 0xD3, 0xE0, 0x0B, 0xC2,
                        0x09, 0x5E, 0x0C, 0x89, 0x46, 0x0E, 0xFF, 0x4E, 0x08, 0x75, 0xB2, 0xFE,
                        0x4E, 0x0A, 0x75, 0x93, 0xBE, 0x00, 0x01, 0x83, 0xC4, 0x10, 0x33, 0xC0,
                        0xFF, 0xE6, 0x87, 0xD6, 0x8B, 0x4E, 0x0C, 0xAD, 0x8B, 0xD8, 0x23, 0xD9,
                        0xAD, 0x3B, 0xC3, 0x75, 0xF6, 0x8B, 0x4C, 0x3C, 0x87, 0xD6, 0x8A, 0xC5,
                        0xE8, 0x1A, 0x00, 0x32, 0xED, 0x80, 0xF9, 0x02, 0x72, 0x10, 0xFE, 0xC9,
                        0x8A, 0xC1, 0xE8, 0x0C, 0x00, 0xBB, 0x01, 0x00, 0xD3, 0xE3, 0x0B, 0xC3,
                        0x8B, 0xC8, 0xC3, 0xB0, 0x10, 0x51, 0x8A, 0xC8, 0x8B, 0x46, 0x0E, 0x8B,
                        0x5E, 0x0C, 0x8A, 0x6E, 0x0B, 0xBA, 0x01, 0x00, 0xD3, 0xE2, 0x4A, 0x23,
                        0xD3, 0x52, 0x2A, 0xE9, 0x73, 0x21, 0x02, 0xE9, 0x86, 0xCD, 0xBA, 0x01,
                        0x00, 0xD3, 0xE2, 0x4A, 0x23, 0xD0, 0xD3, 0xCA, 0xD3, 0xE8, 0xD3, 0xEB,
                        0x0B, 0xDA, 0x83, 0xC6, 0x02, 0x8B, 0x04, 0x86, 0xCD, 0x2A, 0xCD, 0xB5,
                        0x10, 0x2A, 0xE9, 0xBA, 0x01, 0x00, 0xD3, 0xE2, 0x4A, 0x23, 0xD0, 0xD3,
                        0xCA, 0xD3, 0xE8, 0xD3, 0xEB, 0x0B, 0xDA, 0x89, 0x46, 0x0E, 0x89, 0x5E,
                        0x0C, 0x88, 0x6E, 0x0B, 0x58, 0x59, 0xC3, 0x57, 0x52, 0x83, 0xEC, 0x10,
                        0xB0, 0x05, 0xE8, 0xA0, 0xFF, 0x8B, 0xC8, 0xE3, 0x67, 0x8B, 0xFC, 0x51,
                        0xB0, 0x04, 0xE8, 0x94, 0xFF, 0x36, 0x88, 0x05, 0x47, 0xE2, 0xF5, 0x59,
                        0x56, 0x8B, 0xF4, 0x83, 0xC6, 0x02, 0x36, 0x8B, 0x7C, 0x10, 0xB0, 0x01,
                        0x33, 0xDB, 0xBA, 0x00, 0x80, 0x51, 0x56, 0x36, 0x3A, 0x04, 0x75, 0x32,
                        0x50, 0x53, 0x51, 0x8A, 0xC8, 0xB8, 0x01, 0x00, 0xD3, 0xE0, 0x48, 0xAB,
                        0x8A, 0xC1, 0xB1, 0x10, 0x2A, 0xC8, 0xD3, 0xEB, 0x8A, 0xC8, 0x33, 0xC0,
                        0xD1, 0xDB, 0xD1, 0xD0, 0xE2, 0xFA, 0xAB, 0x8B, 0xC6, 0x2B, 0xC4, 0x2D,
                        0x0C, 0x00, 0x36, 0x8A, 0x24, 0x26, 0x89, 0x45, 0x3C, 0x59, 0x5B, 0x58,
                        0x03, 0xDA, 0x46, 0xE2, 0xC6, 0x5E, 0x59, 0xD1, 0xEA, 0xFE, 0xC0, 0x3C,
                        0x11, 0x75, 0xBA, 0x5E, 0x83, 0xC4, 0x10, 0x5A, 0x5F, 0xC3, 0x52, 0x4E,
                        0x43, 0x01, 0x00, 0x00,
                    ])],
                },
            }],
        }],
        related_formats: &[],
    },
};
